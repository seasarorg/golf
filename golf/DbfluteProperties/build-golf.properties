#
# If your project condition is the same as follows, you should use this minumum properties at first.
# And gradually afterwards please specify other properties.
#
#   A. The format of your table name is like 'ORDER_DETAIL' or 'order_detail'. (Not 'OrderDetail')
#   B. The format of your column name is like 'ORDER_DETAIL_ID' or 'order_detail_id'. (Not 'OrderDetailId')
#   C. the name of 'dao.dicon' is 'dbflute.dicon'. (generated using the name)
#   D. the name of 'jdbc.dicon' is 'jdbc.dicon'.
#   E. the package of 'dao.dicon' is default-package. (generated using the package)
#   F. the package of 'jdbc.dicon' is default-package.
#
# If your project condition is not same as A, you should specify the property 'isJavaNameOfTableSameAsDbName'.
# If your project condition is not same as B, you should specify the property 'isJavaNameOfColumnSameAsDbName'.
# If your project condition is not same as C, you should specify the property 'daoDiconFileName'.
# If your project condition is not same as D, you should specify the property 'jdbcDiconResourceName'.
# If your project condition is not same as E, you should specify the property 'daoDiconPackageName'.
# If your project condition is not same as F, you should specify the property 'jdbcDiconResourceName'.
#

# =======================================================================================
#                                                                                 for All
#                                                                                 =======

# -------------------------------------------------------------------
#  P R O J E C T
# -------------------------------------------------------------------
# (Required)

torque.project = golf


# -------------------------------------------------------------------
#  T A R G E T  D A T A B A S E
# -------------------------------------------------------------------
# This is the target database, only considered when generating
# the SQL for your Torque project. Your possible choices are:
#
#   axion, cloudscape, db2, db2400, hypersonic, interbase, mssql,
#   mysql, oracle, postgresql, sapdb, sybase, firebird, derby
# -------------------------------------------------------------------
# (Required)

torque.database = postgresql

# -------------------------------------------------------------------
#  T A R G E T  L A N G U A G E
# -------------------------------------------------------------------
# (NotRequired - Default 'java')
#   The target language. Your possible choices are:
#     java, csharp

torque.targetLanguage = java


# =======================================================================================
#                                                                             for OM task
#                                                                             ===========

# _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
#                                                            Basic
#                                                         _/_/_/_/
# /---------------------------------------------------------------------------
# [OutputDirectory]
#   torque.java.dir: (NotRequired - Default '')
#     The base output directory.
#
torque.java.dir = ../src/
# ----------------/

# _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
#                                                        Available
#                                                         _/_/_/_/

# /---------------------------------------------------------------------------
# [Behavior] (NotRequired - Default 'false')
#   [true]
#     Behavior classes are generated.
#
#   [false]
#     Behavior classes are not generated.
#     And proerties about behavior are invalid.
#
torque.isAvailableBehaviorGeneration = true
# ----------------/

# _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
#                                                          Package
#                                                             _/_/

# /---------------------------------------------------------------------------
# [EntityDao Package]
#    packageBase: (NotRequired - Default '')
#      The base directory of package.
#
#        ex) packageBase = dbflute.ldb, baseCommonPackage = xxx.yyy.allcommon, ...
#              baseCommonPackage       = dbflute.ldb.xxx.yyy.allcommon
#              ...
#
#      *If this property is specified and other package properties is not specified, 
#       Then The packages of generated class are as follows:
#
#        ex) packageBase = dbflute.ldb
#              baseCommonPackage       = dbflute.ldb.allcommon
#              baseBehaviorPackage     = dbflute.ldb.bsbhv
#              baseDaoPackage          = dbflute.ldb.bsdao
#              baseEntityPackage       = dbflute.ldb.bsentity
#              conditionBeanPackage    = dbflute.ldb.cbean
#              extendedBehaviorPackage = dbflute.ldb.exbhv
#              extendedDaoPackage      = dbflute.ldb.exdao
#              extendedEntityPackage   = dbflute.ldb.exentity
#
#      *If this property is not specified, you should specify the other package properties.
#
#
#    baseCommonPackage:       (NotRequired - Default Java:'allcommon' C#:'allcommon')
#    baseBehaviorPackage:     (NotRequired - Default Java:'bsbhv'     C#:'bsbhv')
#    baseDaoPackage:          (NotRequired - Default Java:'bsdao'     C#:'bsdao')
#    baseEntityPackage:       (NotRequired - Default Java:'bsentity'  C#:'bsentity')
#    conditionBeanPackage:    (NotRequired - Default Java:'cbean'     C#:'cbean')
#    extendedBehaviorPackage: (NotRequired - Default Java:'exbhv'     C#:'exbhv')
#    extendedDaoPackage:      (NotRequired - Default Java:'exdao'     C#:'exdao')
#    extendedEntityPackage:   (NotRequired - Default Java:'exentity'  C#:'exentity')
#
torque.packageBase				=  org.seasar.golf.uexample.dao
# ----------------/

# _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
#                                                     Select Param
#                                                     _/_/_/_/_/_/

# /---------------------------------------------------------------------------
# [StatementResultSetType] (NotRequired - Default '')
#   Result set type of statement.
#
#   *If you specify this property, you should do as follows:
#    ex) at j2ee.dicon
#
#     x <component class="org.seasar.extension.jdbc.impl.BasicStatementFactory">
#     o <component class="dbflute.ldb.allcommon.s2dao.LdS2DaoStatementFactory">
#
#   *{Java Only}
#
torque.statementResultSetType = ResultSet.TYPE_SCROLL_INSENSITIVE
# ----------------/

# /---------------------------------------------------------------------------
# [StatementResultSetConcurrency] (NotRequired - Default '')
#   Result set concurrency of statement.
#
#   *If you specify this property, you should do as follows:
#    ex) at j2ee.dicon
#
#     x <component class="org.seasar.extension.jdbc.impl.BasicStatementFactory">
#     o <component class="dbflute.ldb.allcommon.s2dao.LdS2DaoStatementFactory">
#
#   *{Java Only}
#
torque.statementResultSetConcurrency = ResultSet.CONCUR_READ_ONLY
# ----------------/

# _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
#                                                 Source Reduction
#                                                         _/_/_/_/
# /---------------------------------------------------------------------------
# [Make Deprecated] (NotRequired - Default 'true')
#   [true]
#     Make deprecated method and class and so on...
#
torque.isMakeDeprecated = false
# ----------------/

# /---------------------------------------------------------------------------
# [Make ConditionQueryEqualEmptyString] (NotRequired - Default 'true')
#   [true]
#     Make equal empty-string method of condition-query.
#
torque.isMakeConditionQueryEqualEmptyString = false
# ----------------/

# /---------------------------------------------------------------------------
# [Make ConditionQueryNumericArgumentLong] (NotRequired - Default 'true')
#   [true]
#     Make numeric argument long method of condition-query.
#
# *{Java Only}
#
torque.isMakeConditionQueryNumericArgumentLong = false
# ----------------/

# /---------------------------------------------------------------------------
# [Make BehaviorForUpdate] (NotRequired - Default 'true')
#   [true]
#     Make for-update method of behavior.
#
torque.isMakeBehaviorForUpdate = false
# ----------------/

# _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
#                                                        Other
#                                                     _/_/_/_/_/_/

# /---------------------------------------------------------------------------
# [S2Dao Version]
#   isVersionAfter1040: (NotRequired - Default 'true')
#     If your s2dao's version is greater than(or equal) S2Dao-1.0.40,
#     this property should be true.
#
#   *{Java Only}
#
torque.isVersionAfter1040 = true
# ----------------/

# =======================================================================================
#                                                                           for JDBC task
#                                                                           =============
#
#   *Attension: If you use oracle and db2 and derby, schema must be UpperCase.
#
torque.database.driver		= org.postgresql.Driver
torque.database.url			= jdbc:postgresql://localhost:5432/golf
torque.database.schema		= 
torque.database.user		= postgres
torque.database.password	= postgres


# =======================================================================================
#                                                                             for PlaySql
#                                                                             ===========
# /---------------------------------------------------------------------------
# [Replace Schema] (NotRequired - Default 'map:{}')
#   invokeReplaceSchemaDefinitionMap: (NotRequired - Default 'map:{}')
#
#     ex) map:{ torque.invokeReplaceSchemaDefinitionMap = map:{ \
#            isAutoCommit = false \
#            ; isRollbackOnly = false \
#            ; isErrorContinue = false \
#            ; sqlFile = ./playsql/replace-schema.sql \
#         }
#
#   invokeSqlDirectoryDefinitionMap: (NotRequired - Default 'map:{}')
#
#     ex) map:{ torque.invokeSqlDirectoryDefinitionMap = map:{ \
#            isAutoCommit = false \
#            ; isRollbackOnly = false \
#            ; isErrorContinue = false \
#            ; sqlDirectory = ./playsql \
#         }
#
torque.invokeReplaceSchemaDefinitionMap = map:{ \
	isAutoCommit = false \
	; isRollbackOnly = false \
	; isErrorContinue = true \
	; sqlFile = ./playsql/replace-schema.sql \
}

torque.invokeSqlDirectoryDefinitionMap = map:{ \
	isAutoCommit = false \
	; isRollbackOnly = true \
	; isErrorContinue = false \
	; sqlDirectory = ./playsql \
}
torque.versionNoFieldName	= versionno
   torque.sequenceDefinitionMap	= map:{ \
    ;company = company_ccode_seq \
    }